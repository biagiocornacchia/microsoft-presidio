syntax="proto3";

service AnonymizerEntity {
    rpc SendRecognizerResult(stream DataFile) returns (FileAck) {} // sends analyzer or anonymizer results
    rpc sendConfig(Config) returns (FileAck) {} // sends anonymizers or deanonymizers 
    rpc sendFile(stream DataFile) returns (FileAck) {}
    rpc GetText(Request) returns (stream DataFile) {}
    rpc GetItems(Request) returns (stream Item) {}
}

message Request {
    string uuidClient = 1;
    oneof optional {
        string type = 2; // anonymize or deanonymize
    }
}

message FileAck {
    string uuidClient = 1;
    int32 chunks = 2;
}

message DataFile {
    string chunk = 1;
    oneof optional {
        string uuidClient = 2; 
    }
}

message Config {
    string uuidClient = 1;
    string operators = 2;
    oneof optional {
        string type = 3; // anonymize or deanonymize
    }
}

message Item {
    string operator = 1;
    string entity_type = 2;
    int32 start = 3;
    int32 end = 4;
    string text = 5;
}